


ARM Macro Assembler    Page 1 


    1 00000000         ; r12 := key
    2 00000000         ; r11 
    3 00000000         ; r10 := working message word pointer
    4 00000000         ; r9
    5 00000000         ; r8
    6 00000000         ; r7  := case register for jump table
    7 00000000         
    8 00000000         
    9 00000000                 THUMB
   10 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   11 00000000                 EXPORT           Start
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000 37A2B89E 
                       key     DCD              0x37A2B89E  ;
   16 00000004 4D696368 
                       message DCD              0x4D696368  ; Mich
   17 00000008 61656C5F        DCD              0x61656C5F  ; ael_
   18 0000000C 4E65776D        DCD              0x4E65776D  ; Newm
   19 00000010 616E3A29        DCD              0x616E3A29  ; an:)
   20 00000014 00000000        DCD              0x0         ; termination word
   21 00000018         
   22 00000018         Start
   23 00000018 F2AF 0C1C       ADR              r12, key
   24 0000001C F8DC C000       LDR              r12, [r12]
   25 00000020 F2AF 0A20       ADR              r10, message ; load the message
                                                             address pointer
   26 00000024         
   27 00000024         encrpyt_loop
   28 00000024 F85A BB04       LDR              r11, [r10], #4 ; load a word
   29 00000028 F8DA C000       LDR              r12, [r10]
   30 0000002C F1BB 0F00       CMP              r11, #0
   31 00000030 D0FE            BEQ              .           ; TODO -> branch to
                                                             decrpyt
   32 00000032         
   33 00000032         chose_encryption_case
   34 00000032         ;BL  load_case
   35 00000032         ;ADR  encrpyt_JumpTable
   36 00000032         ;LDR
   37 00000032         
   38 00000032         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~
   39 00000032         encrpyt
   40 00000032         
   41 00000032         decrypt
   42 00000032         
   43 00000032         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~
   44 00000032         encrpyt_JumpTable
   45 00000032 00 00 00000000  DCD              case_0
   46 00000038 00000000        DCD              case_1
   47 0000003C 00000000        DCD              case_2
   48 00000040 00000000        DCD              case_3
   49 00000044         
   50 00000044         decrypt_JumpTable
   51 00000044 00000000        DCD              case_0_reverse
   52 00000048 00000000        DCD              case_1_reverse



ARM Macro Assembler    Page 2 


   53 0000004C 00000000        DCD              case_2_reverse
   54 00000050 00000000        DCD              case_3_reverse
   55 00000054         
   56 00000054         load_case
   57 00000054 F04F 0700       MOV              r7, #0
   58 00000058 D500            BPL              positive_case
   59 0000005A D405            BMI              negative_case
   60 0000005C         
   61 0000005C         positive_case
   62 0000005C F5B0 7F7A       CMP              r0, #1000
   63 00000060 BFB4 2700       MOVLT            r7, #0
   64 00000064 2701            MOVGE            r7, #1
   65 00000066 4770            BX               lr
   66 00000068         
   67 00000068         negative_case
   68 00000068 F510 7F7A       CMP              r0, #-1000
   69 0000006C BFCC 2702       MOVGT            r7, #2
   70 00000070 2703            MOVLE            r7, #3
   71 00000072 4770            BX               lr
   72 00000074         
   73 00000074         
   74 00000074         case_0                               ; 0 - 1000
   75 00000074 EA4F 1070       ROR              r0, r0, #5
   76 00000078 4770            BX               lr
   77 0000007A         
   78 0000007A         case_0_reverse
   79 0000007A EA4F 60F0       ROR              r0, r0, #27
   80 0000007E 4770            BX               lr
   81 00000080         
   82 00000080         case_1                               ; 1000 - inf
   83 00000080 EA4F 40B0       ROR              r0, r0, #18
   84 00000084 4770            BX               lr
   85 00000086         
   86 00000086         case_1_reverse
   87 00000086 EA4F 30B0       ROR              r0, r0, #14
   88 0000008A 4770            BX               lr
   89 0000008C         
   90 0000008C         case_2                               ; -1000 - 0
   91 0000008C EA4F 00F0       ROR              r0, r0, #3
   92 00000090 4770            BX               lr
   93 00000092         
   94 00000092         case_2_reverse
   95 00000092 EA4F 7070       ROR              r0, r0, #29
   96 00000096 4770            BX               lr
   97 00000098         
   98 00000098         case_3                               ; 0 - -1000
   99 00000098 EA4F 5070       ROR              r0, r0, #21
  100 0000009C 4770            BX               lr
  101 0000009E         
  102 0000009E         case_3_reverse
  103 0000009E EA4F 20F0       ROR              r0, r0, #11
  104 000000A2 4770            BX               lr
  105 000000A4         
  106 000000A4                 ALIGN
  107 000000A4                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_SimpleProject -IC:\Keil_v5\ARM\PACK\A
RM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Dev
ice\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION 



ARM Macro Assembler    Page 3 


SETA 526" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.
\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 10 in file main.s
   Uses
      None
Comment: .text unused
Start 00000018

Symbol: Start
   Definitions
      At line 22 in file main.s
   Uses
      At line 11 in file main.s
Comment: Start used once
case_0 00000074

Symbol: case_0
   Definitions
      At line 74 in file main.s
   Uses
      At line 45 in file main.s
Comment: case_0 used once
case_0_reverse 0000007A

Symbol: case_0_reverse
   Definitions
      At line 78 in file main.s
   Uses
      At line 51 in file main.s
Comment: case_0_reverse used once
case_1 00000080

Symbol: case_1
   Definitions
      At line 82 in file main.s
   Uses
      At line 46 in file main.s
Comment: case_1 used once
case_1_reverse 00000086

Symbol: case_1_reverse
   Definitions
      At line 86 in file main.s
   Uses
      At line 52 in file main.s
Comment: case_1_reverse used once
case_2 0000008C

Symbol: case_2
   Definitions
      At line 90 in file main.s
   Uses
      At line 47 in file main.s
Comment: case_2 used once
case_2_reverse 00000092

Symbol: case_2_reverse



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 94 in file main.s
   Uses
      At line 53 in file main.s
Comment: case_2_reverse used once
case_3 00000098

Symbol: case_3
   Definitions
      At line 98 in file main.s
   Uses
      At line 48 in file main.s
Comment: case_3 used once
case_3_reverse 0000009E

Symbol: case_3_reverse
   Definitions
      At line 102 in file main.s
   Uses
      At line 54 in file main.s
Comment: case_3_reverse used once
chose_encryption_case 00000032

Symbol: chose_encryption_case
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: chose_encryption_case unused
decrypt 00000032

Symbol: decrypt
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: decrypt unused
decrypt_JumpTable 00000044

Symbol: decrypt_JumpTable
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: decrypt_JumpTable unused
encrpyt 00000032

Symbol: encrpyt
   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: encrpyt unused
encrpyt_JumpTable 00000032

Symbol: encrpyt_JumpTable
   Definitions
      At line 44 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: encrpyt_JumpTable unused
encrpyt_loop 00000024

Symbol: encrpyt_loop
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: encrpyt_loop unused
key 00000000

Symbol: key
   Definitions
      At line 15 in file main.s
   Uses
      At line 23 in file main.s
Comment: key used once
load_case 00000054

Symbol: load_case
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: load_case unused
message 00000004

Symbol: message
   Definitions
      At line 16 in file main.s
   Uses
      At line 25 in file main.s
Comment: message used once
negative_case 00000068

Symbol: negative_case
   Definitions
      At line 67 in file main.s
   Uses
      At line 59 in file main.s
Comment: negative_case used once
positive_case 0000005C

Symbol: positive_case
   Definitions
      At line 61 in file main.s
   Uses
      At line 58 in file main.s
Comment: positive_case used once
21 symbols
355 symbols in table
