


ARM Macro Assembler    Page 1 


    1 00000000         ; r12 := key
    2 00000000         ; r11 
    3 00000000         ; r10 := working message word pointer
    4 00000000         ; r9  := encrpytion jump table ADDRESS
    5 00000000         ; r8  := decryption jump table ADDRESS
    6 00000000         ; r7  := case register for jump table
    7 00000000         
    8 00000000         
    9 00000000                 THUMB
   10 00000000                 AREA             |.text|, CODE, ALIGN=2
   11 00000000                 EXPORT           Start
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000 37A2B89E 
                       key     DCD              0x37A2B89E  ;
   16 00000004 4D696368 
                       message DCD              0x4D696368  ; Mich
   17 00000008 61656C5F        DCD              0x61656C5F  ; ael_
   18 0000000C 4E65776D        DCD              0x4E65776D  ; Newm
   19 00000010 616E3A29        DCD              0x616E3A29  ; an:)
   20 00000014 00000000        DCD              0x0         ; termination word
   21 00000018         
   22 00000018         Start
   23 00000018 F2AF 0C1C       ADR              r12, key
   24 0000001C F8DC C000       LDR              r12, [r12]
   25 00000020 F2AF 0A20       ADR              r10, message ; load the message
                                                             address pointer
   26 00000024 F20F 0966       ADR              r9, encrpyt_JumpTable
   27 00000028 F8D9 9000       LDR              r9, [r9]
   28 0000002C F20F 0870       ADR              r8, decrypt_JumpTable
   29 00000030 F8D8 8000       LDR              r8, [r8]
   30 00000034         
   31 00000034         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~
   32 00000034         
   33 00000034         encrpyt_loop
   34 00000034 F85A 0B04       LDR              r0, [r10], #4 ; load a word
   35 00000038 2800            CMP              r0, #0
   36 0000003A D005            BEQ              decrpyt
   37 0000003C         
   38 0000003C         ;Not equal (still within the loop)
   39 0000003C F000 F838       BL               load_case
   40 00000040 F859 F027       LDR              pc, [r9, r7, LSL #2]
   41 00000044         
   42 00000044         encrpyt_store
   43 00000044 B401            PUSH             {r0}
   44 00000046 E7F5            B                encrpyt_loop
   45 00000048         
   46 00000048         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~
   47 00000048         
   48 00000048         decrpyt
   49 00000048 F10D 0A0C       ADD              r10, sp, #12
   50 0000004C F04F 0000       MOV              r0, #0
   51 00000050 B401            PUSH             {r0}        ; push null termina
                                                            tor
   52 00000052         
   53 00000052         decrpyt_loop



ARM Macro Assembler    Page 2 


   54 00000052 F85A 0904       LDR              r0, [r10], #-4
   55 00000056 2800            CMP              r0, #0
   56 00000058 D005            BEQ              validate
   57 0000005A         
   58 0000005A         ; NE -> Still in the loop
   59 0000005A F000 F829       BL               load_case
   60 0000005E F858 F027       LDR              pc, [r8, r7, LSL #2]
   61 00000062         
   62 00000062         decrpyt_store
   63 00000062 B401            PUSH             {r0}
   64 00000064 E7F5            B                decrpyt_loop
   65 00000066         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~
   66 00000066         
   67 00000066         validate
   68 00000066 BC0F            POP              {r0, r1, r2, r3}
   69 00000068 F2AF 0A68       ADR              r10, message
   70 0000006C         word_0
   71 0000006C F85A 4B04       LDR              r4, [r10], #4
   72 00000070 42A3            CMP              r3, r4
   73 00000072 D10B            BNE              stop
   74 00000074         
   75 00000074         word_1
   76 00000074 F85A 4B04       LDR              r4, [r10], #4
   77 00000078 42A2            CMP              r2, r4
   78 0000007A D107            BNE              stop
   79 0000007C         
   80 0000007C         word_2
   81 0000007C F85A 4B04       LDR              r4, [r10], #4
   82 00000080 42A1            CMP              r1, r4
   83 00000082 D103            BNE              stop
   84 00000084         
   85 00000084         word_3
   86 00000084 F8DA 4000       LDR              r4, [r10]
   87 00000088 42A0            CMP              r0, r4
   88 0000008A D1FF            BNE              stop
   89 0000008C         
   90 0000008C E7FE    stop    B                .
   91 0000008E         
   92 0000008E         ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       ~~~~~~~~~~~~~~~~~~~~~~
   93 0000008E         encrpyt_JumpTable
   94 0000008E 00 00 00000000  DCD              case_0
   95 00000094 00000000        DCD              case_1
   96 00000098 00000000        DCD              case_2
   97 0000009C 00000000        DCD              case_3
   98 000000A0         
   99 000000A0         decrypt_JumpTable
  100 000000A0 00000000        DCD              case_0_reverse
  101 000000A4 00000000        DCD              case_1_reverse
  102 000000A8 00000000        DCD              case_2_reverse
  103 000000AC 00000000        DCD              case_3_reverse
  104 000000B0         
  105 000000B0         load_case
  106 000000B0 F04F 0700       MOV              r7, #0
  107 000000B4 D500            BPL              positive_case
  108 000000B6 D405            BMI              negative_case
  109 000000B8         
  110 000000B8         positive_case



ARM Macro Assembler    Page 3 


  111 000000B8 F5B0 7F7A       CMP              r0, #1000
  112 000000BC BFB4 2700       MOVLT            r7, #0
  113 000000C0 2701            MOVGE            r7, #1
  114 000000C2 4770            BX               lr
  115 000000C4         
  116 000000C4         negative_case
  117 000000C4 F510 7F7A       CMP              r0, #-1000
  118 000000C8 BFCC 2702       MOVGT            r7, #2
  119 000000CC 2703            MOVLE            r7, #3
  120 000000CE 4770            BX               lr
  121 000000D0         
  122 000000D0         
  123 000000D0         case_0                               ; 0 - 1000
  124 000000D0 EA4F 1070       ROR              r0, r0, #5
  125 000000D4 E7B6            B                encrpyt_store
  126 000000D6         
  127 000000D6         case_0_reverse
  128 000000D6 EA4F 60F0       ROR              r0, r0, #27
  129 000000DA E7C2            B                decrpyt_store
  130 000000DC         
  131 000000DC         case_1                               ; 1000 - inf
  132 000000DC EA4F 40B0       ROR              r0, r0, #18
  133 000000E0 E7B0            B                encrpyt_store
  134 000000E2         
  135 000000E2         case_1_reverse
  136 000000E2 EA4F 30B0       ROR              r0, r0, #14
  137 000000E6 E7BC            B                decrpyt_store
  138 000000E8         
  139 000000E8         case_2                               ; -1000 - 0
  140 000000E8 EA4F 00F0       ROR              r0, r0, #3
  141 000000EC E7AA            B                encrpyt_store
  142 000000EE         
  143 000000EE         case_2_reverse
  144 000000EE EA4F 7070       ROR              r0, r0, #29
  145 000000F2 E7B6            B                decrpyt_store
  146 000000F4         
  147 000000F4         case_3                               ; 0 - -1000
  148 000000F4 EA4F 5070       ROR              r0, r0, #21
  149 000000F8 E7A4            B                encrpyt_store
  150 000000FA         
  151 000000FA         case_3_reverse
  152 000000FA EA4F 20F0       ROR              r0, r0, #11
  153 000000FE E7B0            B                decrpyt_store
  154 00000100         
  155 00000100                 ALIGN
  156 00000100                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_SimpleProject -IC:\Keil_v5\ARM\PACK\A
RM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Dev
ice\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION 
SETA 526" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.
\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 10 in file main.s
   Uses
      None
Comment: .text unused
Start 00000018

Symbol: Start
   Definitions
      At line 22 in file main.s
   Uses
      At line 11 in file main.s
Comment: Start used once
case_0 000000D0

Symbol: case_0
   Definitions
      At line 123 in file main.s
   Uses
      At line 94 in file main.s
Comment: case_0 used once
case_0_reverse 000000D6

Symbol: case_0_reverse
   Definitions
      At line 127 in file main.s
   Uses
      At line 100 in file main.s
Comment: case_0_reverse used once
case_1 000000DC

Symbol: case_1
   Definitions
      At line 131 in file main.s
   Uses
      At line 95 in file main.s
Comment: case_1 used once
case_1_reverse 000000E2

Symbol: case_1_reverse
   Definitions
      At line 135 in file main.s
   Uses
      At line 101 in file main.s
Comment: case_1_reverse used once
case_2 000000E8

Symbol: case_2
   Definitions
      At line 139 in file main.s
   Uses
      At line 96 in file main.s
Comment: case_2 used once
case_2_reverse 000000EE

Symbol: case_2_reverse



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 143 in file main.s
   Uses
      At line 102 in file main.s
Comment: case_2_reverse used once
case_3 000000F4

Symbol: case_3
   Definitions
      At line 147 in file main.s
   Uses
      At line 97 in file main.s
Comment: case_3 used once
case_3_reverse 000000FA

Symbol: case_3_reverse
   Definitions
      At line 151 in file main.s
   Uses
      At line 103 in file main.s
Comment: case_3_reverse used once
decrpyt 00000048

Symbol: decrpyt
   Definitions
      At line 48 in file main.s
   Uses
      At line 36 in file main.s
Comment: decrpyt used once
decrpyt_loop 00000052

Symbol: decrpyt_loop
   Definitions
      At line 53 in file main.s
   Uses
      At line 64 in file main.s
Comment: decrpyt_loop used once
decrpyt_store 00000062

Symbol: decrpyt_store
   Definitions
      At line 62 in file main.s
   Uses
      At line 129 in file main.s
      At line 137 in file main.s
      At line 145 in file main.s
      At line 153 in file main.s

decrypt_JumpTable 000000A0

Symbol: decrypt_JumpTable
   Definitions
      At line 99 in file main.s
   Uses
      At line 28 in file main.s
Comment: decrypt_JumpTable used once
encrpyt_JumpTable 0000008E

Symbol: encrpyt_JumpTable



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 93 in file main.s
   Uses
      At line 26 in file main.s
Comment: encrpyt_JumpTable used once
encrpyt_loop 00000034

Symbol: encrpyt_loop
   Definitions
      At line 33 in file main.s
   Uses
      At line 44 in file main.s
Comment: encrpyt_loop used once
encrpyt_store 00000044

Symbol: encrpyt_store
   Definitions
      At line 42 in file main.s
   Uses
      At line 125 in file main.s
      At line 133 in file main.s
      At line 141 in file main.s
      At line 149 in file main.s

key 00000000

Symbol: key
   Definitions
      At line 15 in file main.s
   Uses
      At line 23 in file main.s
Comment: key used once
load_case 000000B0

Symbol: load_case
   Definitions
      At line 105 in file main.s
   Uses
      At line 39 in file main.s
      At line 59 in file main.s

message 00000004

Symbol: message
   Definitions
      At line 16 in file main.s
   Uses
      At line 25 in file main.s
      At line 69 in file main.s

negative_case 000000C4

Symbol: negative_case
   Definitions
      At line 116 in file main.s
   Uses
      At line 108 in file main.s
Comment: negative_case used once
positive_case 000000B8



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: positive_case
   Definitions
      At line 110 in file main.s
   Uses
      At line 107 in file main.s
Comment: positive_case used once
stop 0000008C

Symbol: stop
   Definitions
      At line 90 in file main.s
   Uses
      At line 73 in file main.s
      At line 78 in file main.s
      At line 83 in file main.s
      At line 88 in file main.s

validate 00000066

Symbol: validate
   Definitions
      At line 67 in file main.s
   Uses
      At line 56 in file main.s
Comment: validate used once
word_0 0000006C

Symbol: word_0
   Definitions
      At line 70 in file main.s
   Uses
      None
Comment: word_0 unused
word_1 00000074

Symbol: word_1
   Definitions
      At line 75 in file main.s
   Uses
      None
Comment: word_1 unused
word_2 0000007C

Symbol: word_2
   Definitions
      At line 80 in file main.s
   Uses
      None
Comment: word_2 unused
word_3 00000084

Symbol: word_3
   Definitions
      At line 85 in file main.s
   Uses
      None
Comment: word_3 unused
28 symbols



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

362 symbols in table
